// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: daischemas/SceneUpdate.proto

#include "daischemas/SceneUpdate.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace dai {
namespace schemas {

inline constexpr SceneUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : deletions_{},
        entities_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SceneUpdate::SceneUpdate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SceneUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SceneUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SceneUpdateDefaultTypeInternal() {}
  union {
    SceneUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SceneUpdateDefaultTypeInternal _SceneUpdate_default_instance_;
}  // namespace schemas
}  // namespace dai
static ::_pb::Metadata file_level_metadata_daischemas_2fSceneUpdate_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_daischemas_2fSceneUpdate_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_daischemas_2fSceneUpdate_2eproto = nullptr;
const ::uint32_t TableStruct_daischemas_2fSceneUpdate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dai::schemas::SceneUpdate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dai::schemas::SceneUpdate, _impl_.deletions_),
    PROTOBUF_FIELD_OFFSET(::dai::schemas::SceneUpdate, _impl_.entities_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::dai::schemas::SceneUpdate)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::dai::schemas::_SceneUpdate_default_instance_._instance,
};
const char descriptor_table_protodef_daischemas_2fSceneUpdate_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\034daischemas/SceneUpdate.proto\022\013dai.sche"
    "mas\032\034daischemas/SceneEntity.proto\032$daisc"
    "hemas/SceneEntityDeletion.proto\"n\n\013Scene"
    "Update\0223\n\tdeletions\030\001 \003(\0132 .dai.schemas."
    "SceneEntityDeletion\022*\n\010entities\030\002 \003(\0132\030."
    "dai.schemas.SceneEntityb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_daischemas_2fSceneUpdate_2eproto_deps[2] =
    {
        &::descriptor_table_daischemas_2fSceneEntity_2eproto,
        &::descriptor_table_daischemas_2fSceneEntityDeletion_2eproto,
};
static ::absl::once_flag descriptor_table_daischemas_2fSceneUpdate_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_daischemas_2fSceneUpdate_2eproto = {
    false,
    false,
    231,
    descriptor_table_protodef_daischemas_2fSceneUpdate_2eproto,
    "daischemas/SceneUpdate.proto",
    &descriptor_table_daischemas_2fSceneUpdate_2eproto_once,
    descriptor_table_daischemas_2fSceneUpdate_2eproto_deps,
    2,
    1,
    schemas,
    file_default_instances,
    TableStruct_daischemas_2fSceneUpdate_2eproto::offsets,
    file_level_metadata_daischemas_2fSceneUpdate_2eproto,
    file_level_enum_descriptors_daischemas_2fSceneUpdate_2eproto,
    file_level_service_descriptors_daischemas_2fSceneUpdate_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_daischemas_2fSceneUpdate_2eproto_getter() {
  return &descriptor_table_daischemas_2fSceneUpdate_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_daischemas_2fSceneUpdate_2eproto(&descriptor_table_daischemas_2fSceneUpdate_2eproto);
namespace dai {
namespace schemas {
// ===================================================================

class SceneUpdate::_Internal {
 public:
};

void SceneUpdate::clear_deletions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.deletions_.Clear();
}
void SceneUpdate::clear_entities() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entities_.Clear();
}
SceneUpdate::SceneUpdate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dai.schemas.SceneUpdate)
}
inline PROTOBUF_NDEBUG_INLINE SceneUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : deletions_{visibility, arena, from.deletions_},
        entities_{visibility, arena, from.entities_},
        _cached_size_{0} {}

SceneUpdate::SceneUpdate(
    ::google::protobuf::Arena* arena,
    const SceneUpdate& from)
    : ::google::protobuf::Message(arena) {
  SceneUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:dai.schemas.SceneUpdate)
}
inline PROTOBUF_NDEBUG_INLINE SceneUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : deletions_{visibility, arena},
        entities_{visibility, arena},
        _cached_size_{0} {}

inline void SceneUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SceneUpdate::~SceneUpdate() {
  // @@protoc_insertion_point(destructor:dai.schemas.SceneUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SceneUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SceneUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:dai.schemas.SceneUpdate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.deletions_.Clear();
  _impl_.entities_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SceneUpdate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> SceneUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SceneUpdate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .dai.schemas.SceneEntity entities = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(SceneUpdate, _impl_.entities_)}},
    // repeated .dai.schemas.SceneEntityDeletion deletions = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SceneUpdate, _impl_.deletions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dai.schemas.SceneEntityDeletion deletions = 1;
    {PROTOBUF_FIELD_OFFSET(SceneUpdate, _impl_.deletions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dai.schemas.SceneEntity entities = 2;
    {PROTOBUF_FIELD_OFFSET(SceneUpdate, _impl_.entities_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dai::schemas::SceneEntityDeletion>()},
    {::_pbi::TcParser::GetTable<::dai::schemas::SceneEntity>()},
  }}, {{
  }},
};

::uint8_t* SceneUpdate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dai.schemas.SceneUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dai.schemas.SceneEntityDeletion deletions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_deletions_size()); i < n; i++) {
    const auto& repfield = this->_internal_deletions().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .dai.schemas.SceneEntity entities = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_entities_size()); i < n; i++) {
    const auto& repfield = this->_internal_entities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dai.schemas.SceneUpdate)
  return target;
}

::size_t SceneUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dai.schemas.SceneUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dai.schemas.SceneEntityDeletion deletions = 1;
  total_size += 1UL * this->_internal_deletions_size();
  for (const auto& msg : this->_internal_deletions()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .dai.schemas.SceneEntity entities = 2;
  total_size += 1UL * this->_internal_entities_size();
  for (const auto& msg : this->_internal_entities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SceneUpdate::_class_data_ = {
    SceneUpdate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SceneUpdate::GetClassData() const {
  return &_class_data_;
}

void SceneUpdate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SceneUpdate*>(&to_msg);
  auto& from = static_cast<const SceneUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dai.schemas.SceneUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_deletions()->MergeFrom(
      from._internal_deletions());
  _this->_internal_mutable_entities()->MergeFrom(
      from._internal_entities());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SceneUpdate::CopyFrom(const SceneUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dai.schemas.SceneUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SceneUpdate::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SceneUpdate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SceneUpdate::InternalSwap(SceneUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.deletions_.InternalSwap(&other->_impl_.deletions_);
  _impl_.entities_.InternalSwap(&other->_impl_.entities_);
}

::google::protobuf::Metadata SceneUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_daischemas_2fSceneUpdate_2eproto_getter, &descriptor_table_daischemas_2fSceneUpdate_2eproto_once,
      file_level_metadata_daischemas_2fSceneUpdate_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace schemas
}  // namespace dai
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
